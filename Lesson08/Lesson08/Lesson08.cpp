// Lesson08.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"

//Повторение пройденного материала

/*
1)	Для чего обычно используют кнопочные элементы управления, 
    такие как Button, Check Box, Radio Button ?
2)	Какими способами можно создать кнопку на диалоге ?
3)	Какое сообщение приходит в диалоговую процедуру при воздействии на 
    элемент управления диалога (например, при нажатии на кнопку) ?
4)	Какая дополнительная информация приходит с сообщением WM_COMMAND ?
5)	Какое уведомление приходит диалогу при нажатии на кнопку ?
6)	Какая функция позволяет перевести фокус ввода на элемент управления ?
7)	Какая функция позволяет получить дескриптор окна (элемента управления), 
    обладающего фокусом ввода ?
8)	Как программным способом можно установить изображение на кнопке? 
    Какой стиль в этом случае необходимо задать кнопке?
9)	Какие существуют способы программной инициализации состояния элемента 
    управления Check Box ?
10)	Каким образом можно получить состояние флажка ?
11)	Какое свойство элемента управления Radio Button позволяет объединить в 
    группу несколько переключателей ?
12)	Какие существуют способы программной инициализации состояния переключателя ?
13)	Каким образом можно получить состояние переключателя ?
*/

//Элемент управления «текстовое поле ввода» (Edit Control)
/*
На практике применяются различные текстовые поля ввода в самом широком спектре: 
от небольшого однострочного поля ввода до многострочного элемента управления с 
автоматическим переносом строк, как в программе Microsoft Notepad. 

Создать текстовое поле ввода на форме диалога можно двумя способами:
•	с помощью средств  интегрированной среды разработки     
    Microsoft Visual Studio;
•	посредством вызова функции CreateWindow

*/

// Сообщения текстовых полей ввода

/* 
  Для выполнения различных операций по редактированию текста приложение 
  может отправлять следующие сообщения элементу управле - ния Edit Control
*/



int main()
{
    return 0;
}

