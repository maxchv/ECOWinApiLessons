// Lesson15.cpp : Defines the entry point for the console application.
//

#include "stdafx.h"

// Конекстное меню
/*
	Контекстное меню – это меню, которое появляется в любой части окна 
	приложения при щелчке правой кнопкой мыши. При этом содержание 
	контекстного меню изменяется в зависимости от «контекста» — места, 
	где произведен щелчок правой кнопкой мыши. 

	Обычно контекстное меню содержит пункты, которые дублируют команды 
	основного меню, но сгруппированные иначе, чтобы максимально облегчить 
	пользователю работу с приложением.

	Cоздание контекстного меню выполняется аналогично созданию главного меню 
	приложения. Для этого используется два подхода:

	•	определение шаблона меню в файле описания ресурсов;
	•	программное (динамическое) создание меню.

*/

/*
	Создавая шаблон контекстного меню с помощью редактора меню, необходимо 
	определить нулевой пункт меню нулевого уровня как подменю, имеющее 
	какое-нибудь  условное имя. Этот пункт нигде не будет отображаться. 
	
	Он необходим только для  получения дескриптора подменю с помощью функции 
	API GetSubMenu

	Полученный дескриптор контекстного меню затем передается функции 
	TrackPopupMenu, которая выводит всплывающее контекстное меню на экран.


	BOOL TrackPopupMenu(
		HMENU hMenu, // дескриптор контекстного меню
		UINT uFlags, // флаги, определяющие позиционирование и другие опции меню
		int x,		 // горизонтальное расположение контекстного меню в экранных 	
					 // координатах
		int y,		 // вертикальное расположение контекстного меню в экранных
					 // координатах
		int nReserved, // зарезервированное значение; должно быть равно 0
		HWND hWnd,	 // дескриптор окна, которому принадлежит контекстное меню
		HWND prcRect // параметр игнорируется
	);

	https://msdn.microsoft.com/en-us/library/windows/desktop/ms648002(v=vs.85).aspx

	Описанные выше действия иллюстрируются следующим фрагмен-том кода:

	// Загрузим меню из ресурсов приложения
	HMENU hMenu = LoadMenu(GetModuleHandle(NULL), MAKEINTRESOURCE(IDR_MENU1));
	
	// Получим дескриптор подменю
	HMENU hSubMenu = GetSubMenu(hMenu, 0);
	
	// Отобразим контекстное меню, левый верхний угол которого привязывается    
	// к точке текущего положения курсора мыши
	TrackPopupMenu(hSubMenu, TPM_LEFTALIGN, xPos, yPos, 0, hDialog, NULL);
*/

/*
	При щелчке правой кнопкой мыши Windows отправляет оконной процедуре 
	приложения сообщение WM_RBUTTONDOWN, содержащее в LPARAM клиентские 
	координаты курсора мыши в момент щелчка. 
	
	Помимо этого сообщения в оконную процедуру приложения приходит сообщение 
	WM_CONTEXTMENU, содержащее в LPARAM экранные координаты курсора мыши 
	(в младшей части LPARAM находится координата X положения курсора мыши, 
	а в старшей части - координата Y), а в WPARAM дескриптор окна, 
	в котором произведен щелчок.


*/

// Акселераторы
/*
	Клавиатурные комбинации(акселераторы) дублируют пункты меню, 
	предоставляя альтернативный способ вызова команд меню.

	Чтобы добавить в приложение обработку акселераторов, необходимо выполнить 
	следующую последовательность действий:

	•	модифицировать определение ресурса меню, добавив к имени каждого 
		дублируемого пункта информацию о быстрой клавише;
	•	определить таблицу акселераторов в файле описания ресурсов;
	•	обеспечить загрузку таблицы акселераторов в память приложения;
	•	модифицировать цикл обработки сообщений в функции WinMain.

	Поскольку акселераторы ставятся в соответствие командам меню, то они должны 
	иметь те же идентификаторы, что и элементы меню, которым они соответствуют.
*/
/*
Во время работы приложения для загрузки таблицы акселераторов в память
и получения ее дескриптора используется функция API LoadAccelerators:

HACCEL LoadAccelerators(
	HINSTANCE hInstance, // дескриптор приложения
	LPCTSTR lpTableName  // указатель на строку, содержащую имя таблицы      	
						 // акселераторов
);

https://msdn.microsoft.com/en-us/library/windows/desktop/ms646370(v=vs.85).aspx

Для обработки акселераторов приложение должно перехватывать сообщения 
клавиатуры, анализировать их коды и в случае совпадения с кодом, 
определенным в таблице акселераторов, направлять соответствующее сообщение 
в оконную процедуру главного окна.

С этой целью используется функция API TranslateAccelerator:

int TranslateAccelerator(
	HWND hWnd,			// дескриптор окна-получателя сообщений
	HACCEL hAccTable,	// дескриптор таблицы акселераторов
	LPMSG lpMsg			// указатель на структуру MSG
);

https://msdn.microsoft.com/en-us/library/windows/desktop/ms646373(v=vs.85).aspx

Сформированное сообщение, содержащее идентификатор акселератора в младшем слове 
параметра wParam, отправляется непосредственно в оконную процедуру, минуя 
очередь сообщений. 

Возврат из функции TranslateAccelerator  происходит только после того, как 
оконная процедура обработает посланное сообщение.

Если функция TranslateAccelerator возвращает ненулевое значение, это  значит, 
что преобразование комбинации клавиш и обработка отправленного  сообщения 
завершились успешно. В этом случае приложение не должно повторно обрабатывать 
ту же самую комбинацию кла-виш при помощи функций TranslateMessage и DispatchMessage.
*/

// Практическая часть

/*
1.	Модифицировать  приложение «Текстовый редактор», 
	дополнив его возможностью выбора пунктов меню с помощью акселераторов.
2.	Добавить  акселераторы в приложение «Счётчик».
*/

int main()
{
    return 0;
}

